find_package(PkgConfig REQUIRED)
if(CMAKE_BUILD_TYPE MATCHES Debug)
  set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${PROJECT_SOURCE_DIR}/meta/tmp/seastar/build/debug")
else()
  set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${PROJECT_SOURCE_DIR}/meta/tmp/seastar/build/release")
endif()

pkg_search_module(SEASTAR REQUIRED seastar)


function (seastar_rte_libs OUTPUT)
  set(tmp_rte "-Wl,--whole-archive")
  foreach(flag ${SEASTAR_LDFLAGS})
    if(flag MATCHES ".*-lrte_.*")
      list(APPEND tmp_rte ${flag})
    endif()
  endforeach()
  list(APPEND tmp_rte "-Wl,--no-whole-archive")
  set(${OUTPUT} "${tmp_rte}" PARENT_SCOPE)
endfunction()

seastar_rte_libs(SEASTAR_DPDK_LIBS)

# link_directories(${SEASTAR_LIBRARY_DIRS})
# message(STATUS "SEASTAR_DPDK_LIBS:\t ${SEASTAR_DPDK_LIBS}")
# message(STATUS "SEASTAR SEASTAR_FOUND:\t ${SEASTAR_FOUND} \n")
# message(STATUS "SEASTAR SEASTAR_LIBRARIES:\t ${SEASTAR_LIBRARIES}\n")
# message(STATUS "SEASTAR SEASTAR_LIBRARY_DIRS:\t  ${SEASTAR_LIBRARY_DIRS}\n")
# message(STATUS "SEASTAR SEASTAR_LDFLAGS:\t ${SEASTAR_LDFLAGS}\n")
# message(STATUS "SEASTAR SEASTAR_LDFLAGS_OTHER:\t ${SEASTAR_LDFLAGS_OTHER}\n")
# message(STATUS "SEASTAR SEASTAR_INCLUDE_DIRS:\t ${SEASTAR_INCLUDE_DIRS}\n")
# message(STATUS "SEASTAR SEASTAR_CFLAGS:\t ${SEASTAR_CFLAGS}\n")
# message(STATUS "SEASTAR CFLAGS_OTHER:\t ${SEASTAR_CFLAGS_OTHER}\n")

function(smf_seastar_target TARGET)
  target_compile_options(${TARGET} PUBLIC ${SEASTAR_CFLAGS})
  target_include_directories(${TARGET} PUBLIC SYSTEM ${SEASTAR_INCLUDE_DIRS})
  target_link_libraries(${TARGET} -Wl,--whole-archive,-lseastar,--no-whole-archive;)
  target_link_libraries(${TARGET} ${SEASTAR_LIBRARIES})
endfunction()
