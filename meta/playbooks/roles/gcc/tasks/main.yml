---


- name: install os gcc deps
  become: yes
  apt:
    name='{{item}}'
  with_items:
    - libgmp-dev
    - libmpfr-dev
    - libmpc-dev
    - libisl-dev
  when: ansible_os_family == "Debian"

- name: install os gcc deps
  become: yes
  dnf:
    name='{{item}}'
  with_items:
    - gmp-devel
    - mpfr-devel
    - libmpc-devel
    - isl-devel
  when: ansible_os_family == "RedHat"

- set_fact:
    gcc_version: 7.2.0

- name: download gcc
  unarchive:
    src: 'https://ftp.gnu.org/gnu/gcc/gcc-{{gcc_version}}/gcc-{{gcc_version}}.tar.gz'
    dest: '{{goobly_cache_dir}}/'
    creates: '{{goobly_cache_dir}}/gcc-{{gcc_version}}'
    remote_src: True

- file: path='{{goobly_cache_dir}}/gcc-{{gcc_version}}/build' state=directory


- name: configure gcc only for c and c++
  shell:
    HACK=1 \
    {{goobly_cache_dir}}/gcc-{{gcc_version}}/configure \
    --prefix={{third_party_dir}} \
    --enable-bootstrap \
    --enable-shared \
    --enable-threads=posix \
    --enable-checking=release \
    --disable-multilib \
    --with-system-zlib \
    --enable-__cxa_atexit \
    --disable-libunwind-exceptions \
    --enable-gnu-unique-object \
    --enable-linker-build-id \
    --with-gcc-major-version-only \
    --with-linker-hash-style=gnu \
    --enable-plugin \
    --enable-initfini-array \
    --with-isl \
    --enable-libmpx \
    --enable-offload-targets=nvptx-none \
    --without-cuda-driver \
    --enable-gnu-indirect-function \
    --with-tune=generic    \
    --disable-nls \
    --enable-languages=c,c++
  args:
    chdir: '{{goobly_cache_dir}}/gcc-{{gcc_version}}/build'
    creates: '{{goobly_cache_dir}}/gcc-{{gcc_version}}/build/Makefile'

- name: make gcc
  shell:
    "make -j$((({{ansible_processor_vcpus}}-1)))"
  args:
    chdir: '{{goobly_cache_dir}}/gcc-{{gcc_version}}/build'
    creates: '{{goobly_cache_dir}}/gcc-{{gcc_version}}/build/gcc/xg++'

- name: install gcc
  shell:
    "make install -j$((({{ansible_processor_vcpus}}-1)))"
  args:
    chdir: '{{goobly_cache_dir}}/gcc-{{gcc_version}}/build'
    creates: '{{third_party_dir}}/bin/g++'
